# OASIS_START
# DO NOT EDIT (digest: b9a964cac8b13dffd74268141cb9fb8c)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library webmachine
"lib/webmachine.cmxs": use_webmachine
<lib/*.ml{,i,y}>: package(cohttp)
<lib/*.ml{,i,y}>: package(dispatch)
<lib/*.ml{,i,y}>: package(re)
<lib/*.ml{,i,y}>: package(re.str)
<lib/*.ml{,i,y}>: package(uri)
# Executable hello_async
<examples/hello_async.{native,byte}>: package(async)
<examples/hello_async.{native,byte}>: package(cohttp)
<examples/hello_async.{native,byte}>: package(cohttp.async)
<examples/hello_async.{native,byte}>: package(dispatch)
<examples/hello_async.{native,byte}>: package(re)
<examples/hello_async.{native,byte}>: package(re.str)
<examples/hello_async.{native,byte}>: package(threads)
<examples/hello_async.{native,byte}>: package(uri)
<examples/hello_async.{native,byte}>: use_webmachine
<examples/*.ml{,i,y}>: package(async)
<examples/*.ml{,i,y}>: package(cohttp.async)
# Executable hello_lwt
<examples/hello_lwt.{native,byte}>: package(cohttp)
<examples/hello_lwt.{native,byte}>: package(cohttp.lwt)
<examples/hello_lwt.{native,byte}>: package(dispatch)
<examples/hello_lwt.{native,byte}>: package(re)
<examples/hello_lwt.{native,byte}>: package(re.str)
<examples/hello_lwt.{native,byte}>: package(threads)
<examples/hello_lwt.{native,byte}>: package(uri)
<examples/hello_lwt.{native,byte}>: use_webmachine
# Executable crud_lwt
<examples/crud_lwt.{native,byte}>: package(cohttp)
<examples/crud_lwt.{native,byte}>: package(cohttp.lwt)
<examples/crud_lwt.{native,byte}>: package(dispatch)
<examples/crud_lwt.{native,byte}>: package(re)
<examples/crud_lwt.{native,byte}>: package(re.str)
<examples/crud_lwt.{native,byte}>: package(threads)
<examples/crud_lwt.{native,byte}>: package(uri)
<examples/crud_lwt.{native,byte}>: use_webmachine
<examples/*.ml{,i,y}>: package(cohttp)
<examples/*.ml{,i,y}>: package(cohttp.lwt)
<examples/*.ml{,i,y}>: package(dispatch)
<examples/*.ml{,i,y}>: package(re)
<examples/*.ml{,i,y}>: package(re.str)
<examples/*.ml{,i,y}>: package(threads)
<examples/*.ml{,i,y}>: package(uri)
<examples/*.ml{,i,y}>: use_webmachine
# Executable test_logic
<lib_test/test_logic.{native,byte}>: package(cohttp)
<lib_test/test_logic.{native,byte}>: package(dispatch)
<lib_test/test_logic.{native,byte}>: package(oUnit)
<lib_test/test_logic.{native,byte}>: package(re)
<lib_test/test_logic.{native,byte}>: package(re.str)
<lib_test/test_logic.{native,byte}>: package(uri)
<lib_test/test_logic.{native,byte}>: use_webmachine
# Executable test_dispatch
<lib_test/test_dispatch.{native,byte}>: package(cohttp)
<lib_test/test_dispatch.{native,byte}>: package(dispatch)
<lib_test/test_dispatch.{native,byte}>: package(oUnit)
<lib_test/test_dispatch.{native,byte}>: package(re)
<lib_test/test_dispatch.{native,byte}>: package(re.str)
<lib_test/test_dispatch.{native,byte}>: package(uri)
<lib_test/test_dispatch.{native,byte}>: use_webmachine
<lib_test/*.ml{,i,y}>: package(cohttp)
<lib_test/*.ml{,i,y}>: package(dispatch)
<lib_test/*.ml{,i,y}>: package(oUnit)
<lib_test/*.ml{,i,y}>: package(re)
<lib_test/*.ml{,i,y}>: package(re.str)
<lib_test/*.ml{,i,y}>: package(uri)
<lib_test/*.ml{,i,y}>: use_webmachine
# OASIS_STOP
